diff -r d244a10db46e GAS/Makefile
--- a/GAS/Makefile	Mon Feb 20 16:32:09 2017 -0700
+++ b/GAS/Makefile	Thu Oct 05 14:05:51 2017 -0500
@@ -10,7 +10,7 @@
   gas_setup.o gas_update.o \
   temperature_update.o \
   analytic_opacity.o physical_opacity.o \
-  fleck_factor.o opacity_planckmean.o
+  fleck_factor.o opacity_planckmean.o gas_hydro.o
 
 .PHONY: all clean
 
diff -r d244a10db46e GAS/gas_setup.f
--- a/GAS/gas_setup.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/GAS/gas_setup.f	Thu Oct 05 14:05:51 2017 -0500
@@ -6,14 +6,21 @@
       use physconstmod
       use inputparmod
       use gasmod
+      use gridmod
       use manufacmod
       use miscmod, only:warn
+c     BEGIN LSU MOD
+      use timestepmod
+c     END   LSU MOD
       implicit none
 ************************************************************************
 * Initialize the gas grid, the part that is constant with time and
 * temperature. The part that changes is done in gas_grid_update.
 ************************************************************************
       integer :: l,i
+c     BEGIN LSU MOD
+      integer :: j, k
+c     END   LSU MOD
       real*8 :: mass0fr(-2*gas_nchain:gas_nelem,gas_ncell)
 c
 c-- agnostic mass setup
@@ -75,6 +82,28 @@
        gas_ye0 = gas_ye
       endif
 c
+c     BEGIN LSU MOD
+      call grid_update(1.0)
+
+      gas_rho = gas_mass / grd_vol
+
+      if( grd_isvelocity ) then
+       do i = 1, grd_nx
+        do j = 1, grd_ny
+         do k = 1, grd_nz
+          l = grd_icell(i,j,k)
+          gas_mom(1,l) = (grd_xarr(i)+grd_xarr(i+1))*0.5d0*gas_rho(l)
+          gas_mom(2,l) = (grd_yarr(j)+grd_yarr(j+1))*0.5d0*gas_rho(l)
+          gas_mom(3,l) = (grd_zarr(k)+grd_zarr(k+1))*0.5d0*gas_rho(l)
+         enddo
+        enddo
+       enddo
+      else
+       gas_mom = 0.0d0
+      endif
+
+c     END   LSU MOD
+
       end subroutine gas_setup
 c
 c
diff -r d244a10db46e GRID/grid_setup.f
--- a/GRID/grid_setup.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/GRID/grid_setup.f	Thu Oct 05 14:05:51 2017 -0500
@@ -30,6 +30,7 @@
       loop_k: do k=1,grd_nz
        do j=1,grd_ny
        do i=1,grd_nx
+        write(*,*) grd_xarr(i)
         idcell = idcell + 1
         if(idcell == str_idcell(l)) then
          grd_icell(i,j,k) = l
diff -r d244a10db46e GRID/grid_volume.f
--- a/GRID/grid_volume.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/GRID/grid_volume.f	Thu Oct 05 14:05:51 2017 -0500
@@ -56,6 +56,7 @@
       do i=1,grd_nx
        l = grd_icell(i,j,k)
        grd_vol(l) = grd_vol(l) + vol(i,j,k) !multiple void cells are linked to the dummy cell
+!       write(*,*) grd_vol(l)
       enddo
       enddo
       enddo
diff -r d244a10db46e Makefile
--- a/Makefile	Mon Feb 20 16:32:09 2017 -0700
+++ b/Makefile	Thu Oct 05 14:05:51 2017 -0500
@@ -26,7 +26,7 @@
   miscmod.o ionsmod.o ffxsmod.o bfxsmod.o bbxsmod.o \
   inputparmod.o timestepmod.o groupmod.o gridmod.o gasmod.o inputstrmod.o \
   particlemod.o timingmod.o countersmod.o manufacmod.o fluxmod.o totalsmod.o \
-  transportmod.o sourcemod.o
+  transportmod.o sourcemod.o 
 
 FILES := banner.o \
   particle_advance.o particle_advance_gamgrey.o fluxtally.o \
diff -r d244a10db46e OUTPUT/Makefile
--- a/OUTPUT/Makefile	Mon Feb 20 16:32:09 2017 -0700
+++ b/OUTPUT/Makefile	Thu Oct 05 14:05:51 2017 -0500
@@ -5,8 +5,8 @@
 include $(TOP)/Makefile.compiler
 include $(TOP)/Makefile.include
 
-LIBRARY = output.a
-FILES = open_logfiles.o output_grid.o output_flux.o output_gamflux.o
+LIBRARY = output.a libsiloh5.o
+FILES = open_logfiles.o output_grid.o output_flux.o output_gamflux.o output_silo.o
 
 .PHONY: all clean
 
diff -r d244a10db46e gasmod.f
--- a/gasmod.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/gasmod.f	Thu Oct 05 14:05:51 2017 -0500
@@ -41,9 +41,14 @@
       real*8,allocatable :: gas_natom0fr(:,:,:) !(-2:2,ncell,nchain) !initial natom fractions (0,1,2:stable fe/co/ni, -1:ni56, -2:co56)
 c-- mate,allocatablerial energy (temperature) source (may be manufactured), rev>244
       real*8,allocatable :: gas_matsrc(:)     !-- material energy (temperature) source (may be manufactured)
-c
+cf
       real*8,allocatable :: gas_edep(:)
 
+c--   BEGIN LSU MOD
+      real*8,allocatable :: gas_mom(:,:)
+c--   END   LSU MOD
+
+
 c== DD copies
 c-- Line+Cont extinction coeff
       real*4,allocatable :: gas_cap(:,:) !(ng,ncell)
@@ -138,6 +143,11 @@
 c-- ndim=2 alloc big
       allocate(gas_cap(ng,gas_ncell))
 !}}}
+
+c--   BEGIN LSU MOD
+      allocate(gas_mom(3,gas_ncell))
+c--   END   LSU MOD
+
       end subroutine gasmod_init
 c
 c
@@ -167,6 +177,11 @@
       deallocate(gas_natom1fr)
       deallocate(gas_natom0fr)
       deallocate(gas_cap)!}}}
+
+c--   BEGIN LSU MOD
+      deallocate(gas_mom)
+c--   END   LSU MOD
+
       end subroutine gas_dealloc
 c
       end module gasmod
diff -r d244a10db46e gridmod.f
--- a/gridmod.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/gridmod.f	Thu Oct 05 14:05:51 2017 -0500
@@ -5,6 +5,9 @@
       implicit none
 c
       logical :: grd_isvelocity=.false.
+c     BEGIN LSU MOD
+      logical :: grd_ishydro=.false.
+c     END   LSU MOD
 c
       integer :: grd_igeom=0
 c
diff -r d244a10db46e inputparmod.f
--- a/inputparmod.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/inputparmod.f	Thu Oct 05 14:05:51 2017 -0500
@@ -147,6 +147,10 @@
       logical :: in_io_nogriddump = .false.  !don't write grid cell variables
       character(4) :: in_io_opacdump = 'off '    !off|one|each|all: write opacity data to file
       character(4) :: in_io_pdensdump = 'off '   !off|one|each: write partial densities to file
+c     BEGIN LSU MOD
+      logical :: in_io_silo = .false.  !use LLNL SILO output
+      logical :: in_ishydro = .false.
+c     END   LSU MOD
 c     
 c-- runtime parameter namelist
       namelist /inputpars/
@@ -197,6 +201,11 @@
      & in_io_grabstdout,
      & in_io_nogriddump,in_io_dogrdtally,
      & in_io_opacdump,in_io_pdensdump
+c     BEGIN LSU MOD
+     & ,
+     & in_io_silo,
+     & in_ishydro
+c     END   LSU MOD
 c
 c-- pointers
 c
@@ -333,6 +342,10 @@
       call insertl(in_nobfopac,in_l,il)
       call insertl(in_noffopac,in_l,il)
       call insertl(in_nothmson,in_l,il)
+c     BEGIN LSU MOD
+      call insertl(in_io_silo,in_l,il)
+      call insertl(in_ishydro,in_l,il)
+c     END   LSU MOD
 c
       contains
 c
@@ -785,6 +798,9 @@
       grd_ny    = in_ndim(2)
       grd_nz    = in_ndim(3)
       grd_isvelocity = in_isvelocity
+c     BEGIN LSU MOD
+      grd_ishydro = in_ishydro
+c     END   LSU MOD
 c!}}}
       end subroutine provide_inputpars
 c
diff -r d244a10db46e inputstrmod.f
--- a/inputstrmod.f	Mon Feb 20 16:32:09 2017 -0700
+++ b/inputstrmod.f	Thu Oct 05 14:05:51 2017 -0500
@@ -146,6 +146,7 @@
 c
 c-- read body
       read(4,*,iostat=ierr) raw
+      write(*,*) ierr
       if(ierr/=0) stop 'read_inputstr: input.str format err: body'
       read(4,*,iostat=ierr) dmy
       if(ierr/=-1) stop 'read_inputstr: input.str body too long'
diff -r d244a10db46e supernu.f90
--- a/supernu.f90	Mon Feb 20 16:32:09 2017 -0700
+++ b/supernu.f90	Thu Oct 05 14:05:51 2017 -0500
@@ -138,6 +138,7 @@
   endif
 
 
+
 !-- time step loop
 !=================
   if(lmpi0) then
@@ -148,6 +149,9 @@
   endif
 !
   do it=tsp_itrestart,tsp_nt
+! BEGIN LSU MOD
+     call output_silo(tsp_t,max(it,0))
+!  END   LSU MOD
      t_timelin(1) = t_time() !timeline
 !-- allow negative and zero it for temperature initialization purposes
      tsp_it = max(it,1)
@@ -267,6 +271,14 @@
      t_timelin(8) = t_time() !timeline
      t_timeline = t_timeline + (t_timelin(2:) - t_timelin(:7))
   enddo !tsp_it
+
+! BEGIN LSU MOD
+     if( it .ge. 0 ) then
+      call output_silo(tsp_t,it)
+     endif
+! END   LSU MOD
+
+
 !
 !
 !--
diff -r d244a10db46e timestepmod.f90
--- a/timestepmod.f90	Mon Feb 20 16:32:09 2017 -0700
+++ b/timestepmod.f90	Thu Oct 05 14:05:51 2017 -0500
@@ -72,6 +72,12 @@
        stop 'timestep_update: invalid tsp_gridtype'
     end select
 
+!-- BEGIN LSU MOD
+
+
+!-- END   LSU MOD
+
+
 !-- append in time array
     tsp_tarr(tsp_it+1) = tsp_t1
 
